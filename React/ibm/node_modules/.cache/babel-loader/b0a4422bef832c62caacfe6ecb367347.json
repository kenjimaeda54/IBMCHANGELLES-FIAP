{"ast":null,"code":"var _jsxFileName = \"/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport List from \"../List\";\nimport './estilos.css';\nimport api from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversa() {\n  _s();\n\n  const [boot, setUser] = useState(['']);\n  const [user, setBoot] = useState(['']);\n  const [input, setInput] = useState('');\n  {\n    boot.map(item => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        value: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    });\n  }\n  {\n    user.map(item => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        value: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  async function send() {\n    if (input === '') {\n      alert('Voce não digitou nada');\n      return;\n    }\n\n    try {\n      const response = await api.get(`/conversa?mensagem=${input}`);\n      setBoot(input);\n      setUser(response.data);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"digite algo para conversarmos\",\n      value: input,\n      onChange: item => setInput(item.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: send,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Conversa, \"FcxmWnqlX2+6RNX6gxYTSeYE2Pc=\");\n\n_c = Conversa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversa\");","map":{"version":3,"sources":["/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js"],"names":["React","useEffect","useState","List","api","Conversa","boot","setUser","user","setBoot","input","setInput","map","item","text","send","alert","response","get","data","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAII;AACII,IAAAA,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAU;AACf,0BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD;AAKH;AACD;AACIN,IAAAA,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;AACf,0BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,IAAI,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD;AAKH;;AAGL,iBAAeC,IAAf,GAAsB;AAClB,QAAIL,KAAK,KAAK,EAAd,EAAkB;AACdM,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACH;;AACF,QAAG;AACH,YAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,sBAAqBR,KAAM,EAApC,CAAvB;AACAD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAH,MAAAA,OAAO,CAACU,QAAQ,CAACE,IAAV,CAAP;AACC,KAJD,CAIC,OAAMC,KAAN,EAAY;AACTJ,MAAAA,KAAK,CAACI,KAAD,CAAL;AACH;AACH;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,+BAFhB;AAGI,MAAA,KAAK,EAAEV,KAHX;AAII,MAAA,QAAQ,EAAGG,IAAD,IAAUF,QAAQ,CAACE,IAAI,CAACQ,MAAL,CAAYC,KAAb,CAJhC;AAKI,MAAA,SAAS,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEP,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA3DuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport List from \"../List\"\nimport './estilos.css'\nimport api from \"../../../services/api\"\n\n\nexport default function Conversa() {\n    const [boot, setUser] = useState([''])\n    const [user, setBoot] = useState([''])\n    const [input, setInput] = useState('')\n\n\n\n        {\n            boot.map((item) => {\n                return (\n                    <List value={item.text} />\n                )\n            })\n        }\n        {\n            user.map((item) => {\n                return (\n                    <List value={item.text} />\n                )\n            })\n        }\n   \n\n    async function send() {\n        if (input === '') {\n            alert('Voce não digitou nada')\n            return;\n        }\n       try{ \n       const response = await api.get(`/conversa?mensagem=${input}`);\n       setBoot(input)\n       setUser(response.data) \n       }catch(error){\n           alert(error)\n       }\n    }\n\n\n\n    return (\n        <div className=\"container\">\n\n            <input\n                type=\"text\"\n                placeholder=\"digite algo para conversarmos\"\n                value={input}\n                onChange={(item) => setInput(item.target.value)}\n                className=\"input\"\n            />\n            <button className=\"button\" onClick={send} >\n                Enviar\n            </button>\n\n        </div>\n\n    );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}