{"ast":null,"code":"var _jsxFileName = \"/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversa() {\n  _s();\n\n  const [user, setUser] = useState([{\n    text: 'eu gosto muito de comer maça'\n  }, {\n    text: 'eu gosto muito de comer doce'\n  }, {\n    text: 'eu gosto muito de comer macarrao'\n  }]);\n  const [boot, setBoot] = useState([{\n    text: 'eu gosto muito de comer pera'\n  }, {\n    text: 'eu gosto muito de comer arroz'\n  }]);\n  const [arrayBot, setArrayBot] = useState([]);\n  const [arrayUser, setArrayUser] = useState([]);\n  useEffect(() => {\n    setBoot([]);\n    setUser([]);\n    user.map(item => {\n      let list = {\n        item: item.text\n      };\n      setBoot(oldArray => [...oldArray, list]);\n    });\n    boot.map(item => {\n      let list = {\n        item: item.text\n      };\n      setUser(oldArray => [...oldArray, list]);\n    });\n  }, [user, boot]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"  \", user, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\" \", boot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Conversa, \"PUB7mOzwl7KTm6nuzRNYLU0r1xw=\");\n\n_c = Conversa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversa\");","map":{"version":3,"sources":["/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js"],"names":["React","useState","useEffect","Conversa","user","setUser","text","boot","setBoot","arrayBot","setArrayBot","arrayUser","setArrayUser","map","item","list","oldArray"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAMA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAC7B;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAD6B,EAE7B;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAF6B,EAG7B;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAH6B,CAAD,CAAhC;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAE7B;AAAGK,IAAAA,IAAI,EAAE;AAAT,GAF6B,EAI7B;AAAGA,IAAAA,IAAI,EAAE;AAAT,GAJ6B,CAAD,CAAhC;AAMA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,SAAD,EAAWC,YAAX,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AAEDC,EAAAA,SAAS,CAAC,MAAI;AACXM,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AAEAD,IAAAA,IAAI,CAACS,GAAL,CAAUC,IAAD,IAAQ;AACf,UAAIC,IAAI,GAAC;AACPD,QAAAA,IAAI,EAACA,IAAI,CAACR;AADH,OAAT;AAGAE,MAAAA,OAAO,CAACQ,QAAQ,IAAE,CAAC,GAAGA,QAAJ,EAAaD,IAAb,CAAX,CAAP;AACD,KALD;AAMAR,IAAAA,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAQ;AACf,UAAIC,IAAI,GAAC;AACPD,QAAAA,IAAI,EAACA,IAAI,CAACR;AADH,OAAT;AAGAD,MAAAA,OAAO,CAACW,QAAQ,IAAE,CAAC,GAAGA,QAAJ,EAAaD,IAAb,CAAX,CAAP;AACD,KALD;AAOF,GAjBQ,EAiBP,CAACX,IAAD,EAAMG,IAAN,CAjBO,CAAT;AAqBC,sBACI;AAAA,4BAEE;AAAA,uBAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,sBAAQG,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAhDuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\n\n\n\n\nexport default function Conversa() {\n    const [user, setUser] = useState([\n        { text: 'eu gosto muito de comer maça' },\n        { text: 'eu gosto muito de comer doce' },\n        { text: 'eu gosto muito de comer macarrao' },\n    ])\n    const [boot, setBoot] = useState([\n\n        {  text: 'eu gosto muito de comer pera' },\n        \n        {  text: 'eu gosto muito de comer arroz' }\n    ])\n    const [arrayBot,setArrayBot]=useState([])\n    const [arrayUser,setArrayUser] = useState([])          \n\n   useEffect(()=>{\n      setBoot([])\n      setUser([])\n\n      user.map((item)=>{\n        let list={    \n          item:item.text\n        }\n        setBoot(oldArray=>[...oldArray,list])   \n      })\n      boot.map((item)=>{\n        let list={    \n          item:item.text\n        }\n        setUser(oldArray=>[...oldArray,list])    \n      })\n\n   },[user,boot])  \n  \n\n\n    return (\n        <div>\n\n          <text>  {user} </text>\n          <text> {boot}</text> \n\n        </div>\n\n    );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}