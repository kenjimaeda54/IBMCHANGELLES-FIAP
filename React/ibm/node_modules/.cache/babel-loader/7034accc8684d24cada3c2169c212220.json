{"ast":null,"code":"var _jsxFileName = \"/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport List from \"../List\";\nimport './estilos.css';\nimport api from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversa() {\n  _s();\n\n  const [boot, setUser] = useState('');\n  const [user, setBoot] = useState('');\n  const [input, setInput] = useState('');\n\n  async function send() {\n    if (input === '') {\n      alert('Voce não digitou nada');\n      return;\n    }\n\n    try {\n      const response = await api.get(`/?mensagem=${input}`);\n      setBoot(input);\n      setUser(response.data);\n      console.log(response.data);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"digite algo para conversarmos\",\n      value: input,\n      onChange: item => setInput(item.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: send,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(List, {\n      value: user,\n      boot: boot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Conversa, \"Qiszx2POXEGG70e9IIKcOdmPhuM=\");\n\n_c = Conversa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversa\");","map":{"version":3,"sources":["/home/erika/FIAP/IBM Changelles/React/ibm/src/pages/home/Conversa/index.js"],"names":["React","useState","List","api","Conversa","boot","setUser","user","setBoot","input","setInput","send","alert","response","get","data","console","log","error","item","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAKA,iBAAeU,IAAf,GAAsB;AAClB,QAAIF,KAAK,KAAK,EAAd,EAAkB;AACdG,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACH;;AACF,QAAG;AACH,YAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAJ,CAAS,cAAaL,KAAM,EAA5B,CAAvB;AACAD,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAH,MAAAA,OAAO,CAACO,QAAQ,CAACE,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACC,KALD,CAKC,OAAMG,KAAN,EAAY;AACTN,MAAAA,KAAK,CAACM,KAAD,CAAL;AACH;AAGH;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,+BAFhB;AAGI,MAAA,KAAK,EAAET,KAHX;AAII,MAAA,QAAQ,EAAGU,IAAD,IAAUT,QAAQ,CAACS,IAAI,CAACC,MAAL,CAAYC,KAAb,CAJhC;AAKI,MAAA,SAAS,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEV,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAaIJ,IAAI,iBAEF,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,IAAb;AAAmB,MAAA,IAAI,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GArDuBD,Q;;KAAAA,Q","sourcesContent":["import React, {  useState } from \"react\"\n\nimport List from \"../List\"\nimport './estilos.css'\nimport api from \"../../../services/api\"\n\n\nexport default function Conversa() {\n    const [boot, setUser] = useState('')\n    const [user, setBoot] = useState('')\n    const [input, setInput] = useState('')\n\n\n   \n\n    async function send() {\n        if (input === '') {\n            alert('Voce não digitou nada')\n            return;\n        }\n       try{ \n       const response = await api.get(`/?mensagem=${input}`);\n       setBoot(input)\n       setUser(response.data) \n       console.log(response.data)\n       }catch(error){\n           alert(error)\n       }\n\n   \n    }\n\n\n\n    return (\n        <div className=\"container\">\n\n            <input\n                type=\"text\"\n                placeholder=\"digite algo para conversarmos\"\n                value={input}\n                onChange={(item) => setInput(item.target.value)}\n                className=\"input\"\n            />\n            <button className=\"button\" onClick={send} >\n                Enviar\n           </button>\n           \n          { user &&\n\n              <List value={user} boot={boot} />\n\n\n          }\n        </div>\n\n    );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}